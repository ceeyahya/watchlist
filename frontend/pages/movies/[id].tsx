import { useQuery } from '@tanstack/react-query';
import Head from 'next/head';
import Image from 'next/image';
import { NextPage, GetServerSidePropsContext } from 'next';
import { RiLoader4Fill } from 'react-icons/ri';

import { fetchMovie } from 'lib/movies';
import { Movie } from 'types/Movie';

const Movie: NextPage<{ movie: Movie }> = ({ movie }) => {
	const { isLoading, isError, error, data } = useQuery(['movie'], fetchMovie, {
		initialData: movie,
	});

	if (isLoading) {
		return (
			<div className='fixed inset-0 h-screen'>
				<RiLoader4Fill className='h-6 w-6 animate-spin-slow' />
			</div>
		);
	}

	return (
		<div className='py-4 sm:py-24 max-w-3xl mx-auto space-y-8'>
			<Head>
				<title>{movie.title} - Watchlist</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<div className='flex flex-col md:flex-col lg:flex-row items-start space-y-2 md:space-y-0 md:space-x-8 mx-auto'>
				<Image
					loading='eager'
					blurDataURL={movie?.cover ? movie.cover : '/covers.png'}
					objectFit='cover'
					placeholder='blur'
					layout='intrinsic'
					className='rounded-md shadow-md shadow-gray-200'
					width={217}
					height={314}
					src={movie?.cover || '/covers.png'}
					alt={`${movie?.title} Cover`}
				/>
				<div className='flex flex-col space-y-1 md:space-y-2'>
					<div>
						<h1 className='text-2xl font-bold'>{movie.title}</h1>
						<span
							className={`${
								movie.status ? 'text-green-600' : 'text-orange-600'
							}`}>
							{movie?.status ? 'Seen' : 'Watchlist'}
						</span>
					</div>
					<p className='text-gray-500'>
						<span className='text-black font-medium'>
							{movie.director.fullname}
						</span>{' '}
						({movie.releaseYear || 'No release year as of now'})
					</p>
					<p className='max-w-xl text-sm lg:text-base text-gray-500'>
						{movie.synopsis || 'No synopsis as of now'}
					</p>
				</div>
			</div>
			<div>
				<h2 className='py-2 text-2xl font-bold'>Review</h2>
				<p className='text-gray-500'>{movie.review || 'No review yet.'}</p>
			</div>
		</div>
	);
};

export async function getServerSideProps(context: GetServerSidePropsContext) {
	const res = await fetchMovie(context.query.id);

	return {
		props: { movie: res },
	};
}

export default Movie;
