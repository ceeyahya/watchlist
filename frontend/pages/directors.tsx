import { useState } from 'react';
import { useQuery } from '@tanstack/react-query';
import Link from 'next/link';
import Head from 'next/head';
import Image from 'next/image';
import type { NextPage } from 'next';
import axios from 'axios';
import { useUser } from '@auth0/nextjs-auth0';
import { RiDeleteBin2Fill, RiLoader4Fill } from 'react-icons/ri';

import { Notification } from 'components/Misc/Notification';
import { Director, Directors } from 'types/Director';
import { fetchDirectors } from 'lib/directors';

const Directors: NextPage<{ directors: Directors }> = ({ directors }) => {
	const { isLoading, isError, error, data } = useQuery(
		['directors'],
		fetchDirectors,
		{
			initialData: directors,
		}
	);
	const [show, setShow] = useState(false);
	const { user } = useUser();

	const handleDelete = async (id: number) => {
		await axios.delete(`http://127.0.0.1/director/${id}`);
		setShow(true);
	};

	if (isLoading) {
		return (
			<div className='fixed inset-0 h-screen'>
				<RiLoader4Fill className='h-6 w-6 animate-spin-slow' />
			</div>
		);
	}

	return (
		<div>
			<Head>
				<title>Directors - Watchlist</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<main>
				<h1 className='text-2xl font-bold'>Directors</h1>
				<div className='flex flex-col items-center sm:grid md:grid-cols-3 lg:grid-cols-4 sm:gap-x-4'>
					{directors.map((director: Director) => (
						<Link href={`/directors/${director.id}`}>
							<a>
								<div key={director.id} className='group py-8 space-y-4'>
									<Image
										loading='eager'
										blurDataURL={director?.avatar}
										objectFit='cover'
										placeholder='blur'
										layout='responsive'
										className='group-hover:hover:scale-105 group-hover:rounded-md shadow-md shadow-gray-200 rounded-md transition duration-300'
										width={217}
										height={314}
										src={director?.avatar || '/covers.png'}
										alt={`${director?.fullname} Avatar`}
									/>
									<div className='flex items-center space-x-2 md:space-x-4'>
										<div>
											<h2 className='font-bold text-lg w-44 truncate'>
												{director.fullname}
											</h2>
											<p className='text-gray-500'>{director.nationality}</p>
										</div>
										{user ? (
											<button
												onClick={() => handleDelete(director?.id)}
												className='text-red-600 hover:text-red-800 transition duration-300'>
												<RiDeleteBin2Fill className='h-5 w-5' />
											</button>
										) : null}
									</div>
								</div>
							</a>
						</Link>
					))}
				</div>
			</main>
			<Notification
				show={show}
				setShow={setShow}
				title='Successfully Deleted'
				text='a record has been deleted from the database'
			/>
		</div>
	);
};

export async function getServerSideProps() {
	const response = await fetchDirectors();

	return {
		props: {
			directors: response,
		},
	};
}

export default Directors;
